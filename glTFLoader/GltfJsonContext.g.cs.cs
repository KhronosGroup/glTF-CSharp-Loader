//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace glTFLoader {
    using glTFLoader.Schema;
    
    
    public partial class GltfJsonContext {
        
        public static partial void TypeInfoModifier(System.Text.Json.Serialization.Metadata.JsonTypeInfo info) {
            if (typeof(Gltf).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "extensionsUsed" => static (inst, _) => ((Gltf)inst).ShouldSerializeExtensionsUsed(),
                        "extensionsRequired" => static (inst, _) => ((Gltf)inst).ShouldSerializeExtensionsRequired(),
                        "accessors" => static (inst, _) => ((Gltf)inst).ShouldSerializeAccessors(),
                        "animations" => static (inst, _) => ((Gltf)inst).ShouldSerializeAnimations(),
                        "asset" => static (inst, _) => ((Gltf)inst).ShouldSerializeAsset(),
                        "buffers" => static (inst, _) => ((Gltf)inst).ShouldSerializeBuffers(),
                        "bufferViews" => static (inst, _) => ((Gltf)inst).ShouldSerializeBufferViews(),
                        "cameras" => static (inst, _) => ((Gltf)inst).ShouldSerializeCameras(),
                        "images" => static (inst, _) => ((Gltf)inst).ShouldSerializeImages(),
                        "materials" => static (inst, _) => ((Gltf)inst).ShouldSerializeMaterials(),
                        "meshes" => static (inst, _) => ((Gltf)inst).ShouldSerializeMeshes(),
                        "nodes" => static (inst, _) => ((Gltf)inst).ShouldSerializeNodes(),
                        "samplers" => static (inst, _) => ((Gltf)inst).ShouldSerializeSamplers(),
                        "scene" => static (inst, _) => ((Gltf)inst).ShouldSerializeScene(),
                        "scenes" => static (inst, _) => ((Gltf)inst).ShouldSerializeScenes(),
                        "skins" => static (inst, _) => ((Gltf)inst).ShouldSerializeSkins(),
                        "textures" => static (inst, _) => ((Gltf)inst).ShouldSerializeTextures(),
                        _ => null
                    };
                }
            }
            if (typeof(Accessor).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "bufferView" => static (inst, _) => ((Accessor)inst).ShouldSerializeBufferView(),
                        "byteOffset" => static (inst, _) => ((Accessor)inst).ShouldSerializeByteOffset(),
                        "normalized" => static (inst, _) => ((Accessor)inst).ShouldSerializeNormalized(),
                        "max" => static (inst, _) => ((Accessor)inst).ShouldSerializeMax(),
                        "min" => static (inst, _) => ((Accessor)inst).ShouldSerializeMin(),
                        "sparse" => static (inst, _) => ((Accessor)inst).ShouldSerializeSparse(),
                        _ => null
                    };
                }
            }
            if (typeof(AccessorSparse).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "indices" => static (inst, _) => ((AccessorSparse)inst).ShouldSerializeIndices(),
                        "values" => static (inst, _) => ((AccessorSparse)inst).ShouldSerializeValues(),
                        _ => null
                    };
                }
            }
            if (typeof(AccessorSparseIndices).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "byteOffset" => static (inst, _) => ((AccessorSparseIndices)inst).ShouldSerializeByteOffset(),
                        _ => null
                    };
                }
            }
            if (typeof(GltfProperty).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "extensions" => static (inst, _) => ((GltfProperty)inst).ShouldSerializeExtensions(),
                        "extras" => static (inst, _) => ((GltfProperty)inst).ShouldSerializeExtras(),
                        _ => null
                    };
                }
            }
            if (typeof(AccessorSparseValues).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "byteOffset" => static (inst, _) => ((AccessorSparseValues)inst).ShouldSerializeByteOffset(),
                        _ => null
                    };
                }
            }
            if (typeof(GltfChildOfRootProperty).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "name" => static (inst, _) => ((GltfChildOfRootProperty)inst).ShouldSerializeName(),
                        _ => null
                    };
                }
            }
            if (typeof(Animation).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "channels" => static (inst, _) => ((Animation)inst).ShouldSerializeChannels(),
                        "samplers" => static (inst, _) => ((Animation)inst).ShouldSerializeSamplers(),
                        _ => null
                    };
                }
            }
            if (typeof(AnimationChannel).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "target" => static (inst, _) => ((AnimationChannel)inst).ShouldSerializeTarget(),
                        _ => null
                    };
                }
            }
            if (typeof(AnimationChannelTarget).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "node" => static (inst, _) => ((AnimationChannelTarget)inst).ShouldSerializeNode(),
                        _ => null
                    };
                }
            }
            if (typeof(AnimationSampler).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "interpolation" => static (inst, _) => ((AnimationSampler)inst).ShouldSerializeInterpolation(),
                        _ => null
                    };
                }
            }
            if (typeof(Asset).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "copyright" => static (inst, _) => ((Asset)inst).ShouldSerializeCopyright(),
                        "generator" => static (inst, _) => ((Asset)inst).ShouldSerializeGenerator(),
                        "version" => static (inst, _) => ((Asset)inst).ShouldSerializeVersion(),
                        "minVersion" => static (inst, _) => ((Asset)inst).ShouldSerializeMinVersion(),
                        _ => null
                    };
                }
            }
            if (typeof(Buffer).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "uri" => static (inst, _) => ((Buffer)inst).ShouldSerializeUri(),
                        _ => null
                    };
                }
            }
            if (typeof(BufferView).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "byteOffset" => static (inst, _) => ((BufferView)inst).ShouldSerializeByteOffset(),
                        "byteStride" => static (inst, _) => ((BufferView)inst).ShouldSerializeByteStride(),
                        "target" => static (inst, _) => ((BufferView)inst).ShouldSerializeTarget(),
                        _ => null
                    };
                }
            }
            if (typeof(Camera).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "orthographic" => static (inst, _) => ((Camera)inst).ShouldSerializeOrthographic(),
                        "perspective" => static (inst, _) => ((Camera)inst).ShouldSerializePerspective(),
                        _ => null
                    };
                }
            }
            if (typeof(CameraPerspective).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "aspectRatio" => static (inst, _) => ((CameraPerspective)inst).ShouldSerializeAspectRatio(),
                        "zfar" => static (inst, _) => ((CameraPerspective)inst).ShouldSerializeZfar(),
                        _ => null
                    };
                }
            }
            if (typeof(Image).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "uri" => static (inst, _) => ((Image)inst).ShouldSerializeUri(),
                        "mimeType" => static (inst, _) => ((Image)inst).ShouldSerializeMimeType(),
                        "bufferView" => static (inst, _) => ((Image)inst).ShouldSerializeBufferView(),
                        _ => null
                    };
                }
            }
            if (typeof(Material).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "pbrMetallicRoughness" => static (inst, _) => ((Material)inst).ShouldSerializePbrMetallicRoughness(),
                        "normalTexture" => static (inst, _) => ((Material)inst).ShouldSerializeNormalTexture(),
                        "occlusionTexture" => static (inst, _) => ((Material)inst).ShouldSerializeOcclusionTexture(),
                        "emissiveTexture" => static (inst, _) => ((Material)inst).ShouldSerializeEmissiveTexture(),
                        "emissiveFactor" => static (inst, _) => ((Material)inst).ShouldSerializeEmissiveFactor(),
                        "alphaMode" => static (inst, _) => ((Material)inst).ShouldSerializeAlphaMode(),
                        "alphaCutoff" => static (inst, _) => ((Material)inst).ShouldSerializeAlphaCutoff(),
                        "doubleSided" => static (inst, _) => ((Material)inst).ShouldSerializeDoubleSided(),
                        _ => null
                    };
                }
            }
            if (typeof(MaterialPbrMetallicRoughness).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "baseColorFactor" => static (inst, _) => ((MaterialPbrMetallicRoughness)inst).ShouldSerializeBaseColorFactor(),
                        "baseColorTexture" => static (inst, _) => ((MaterialPbrMetallicRoughness)inst).ShouldSerializeBaseColorTexture(),
                        "metallicFactor" => static (inst, _) => ((MaterialPbrMetallicRoughness)inst).ShouldSerializeMetallicFactor(),
                        "roughnessFactor" => static (inst, _) => ((MaterialPbrMetallicRoughness)inst).ShouldSerializeRoughnessFactor(),
                        "metallicRoughnessTexture" => static (inst, _) => ((MaterialPbrMetallicRoughness)inst).ShouldSerializeMetallicRoughnessTexture(),
                        _ => null
                    };
                }
            }
            if (typeof(TextureInfo).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "texCoord" => static (inst, _) => ((TextureInfo)inst).ShouldSerializeTexCoord(),
                        _ => null
                    };
                }
            }
            if (typeof(MaterialNormalTextureInfo).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "scale" => static (inst, _) => ((MaterialNormalTextureInfo)inst).ShouldSerializeScale(),
                        _ => null
                    };
                }
            }
            if (typeof(MaterialOcclusionTextureInfo).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "strength" => static (inst, _) => ((MaterialOcclusionTextureInfo)inst).ShouldSerializeStrength(),
                        _ => null
                    };
                }
            }
            if (typeof(Mesh).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "primitives" => static (inst, _) => ((Mesh)inst).ShouldSerializePrimitives(),
                        "weights" => static (inst, _) => ((Mesh)inst).ShouldSerializeWeights(),
                        _ => null
                    };
                }
            }
            if (typeof(MeshPrimitive).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "attributes" => static (inst, _) => ((MeshPrimitive)inst).ShouldSerializeAttributes(),
                        "indices" => static (inst, _) => ((MeshPrimitive)inst).ShouldSerializeIndices(),
                        "material" => static (inst, _) => ((MeshPrimitive)inst).ShouldSerializeMaterial(),
                        "mode" => static (inst, _) => ((MeshPrimitive)inst).ShouldSerializeMode(),
                        "targets" => static (inst, _) => ((MeshPrimitive)inst).ShouldSerializeTargets(),
                        _ => null
                    };
                }
            }
            if (typeof(Node).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "camera" => static (inst, _) => ((Node)inst).ShouldSerializeCamera(),
                        "children" => static (inst, _) => ((Node)inst).ShouldSerializeChildren(),
                        "skin" => static (inst, _) => ((Node)inst).ShouldSerializeSkin(),
                        "matrix" => static (inst, _) => ((Node)inst).ShouldSerializeMatrix(),
                        "mesh" => static (inst, _) => ((Node)inst).ShouldSerializeMesh(),
                        "rotation" => static (inst, _) => ((Node)inst).ShouldSerializeRotation(),
                        "scale" => static (inst, _) => ((Node)inst).ShouldSerializeScale(),
                        "translation" => static (inst, _) => ((Node)inst).ShouldSerializeTranslation(),
                        "weights" => static (inst, _) => ((Node)inst).ShouldSerializeWeights(),
                        _ => null
                    };
                }
            }
            if (typeof(Sampler).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "magFilter" => static (inst, _) => ((Sampler)inst).ShouldSerializeMagFilter(),
                        "minFilter" => static (inst, _) => ((Sampler)inst).ShouldSerializeMinFilter(),
                        "wrapS" => static (inst, _) => ((Sampler)inst).ShouldSerializeWrapS(),
                        "wrapT" => static (inst, _) => ((Sampler)inst).ShouldSerializeWrapT(),
                        _ => null
                    };
                }
            }
            if (typeof(Scene).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "nodes" => static (inst, _) => ((Scene)inst).ShouldSerializeNodes(),
                        _ => null
                    };
                }
            }
            if (typeof(Skin).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "inverseBindMatrices" => static (inst, _) => ((Skin)inst).ShouldSerializeInverseBindMatrices(),
                        "skeleton" => static (inst, _) => ((Skin)inst).ShouldSerializeSkeleton(),
                        "joints" => static (inst, _) => ((Skin)inst).ShouldSerializeJoints(),
                        _ => null
                    };
                }
            }
            if (typeof(Texture).IsAssignableFrom(info.Type)) {
                foreach (var propertyInfo in info.Properties)
                {
                    propertyInfo.ShouldSerialize ??= propertyInfo.Name switch
                    {
                        "sampler" => static (inst, _) => ((Texture)inst).ShouldSerializeSampler(),
                        "source" => static (inst, _) => ((Texture)inst).ShouldSerializeSource(),
                        _ => null
                    };
                }
            }
        }
    }
}
